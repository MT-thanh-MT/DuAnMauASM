/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

import com.edusys.Language.LanguageSelected;
import com.edusys.Language.QLCDLanguage;
import com.edusys.Language.QLHVLanguage;
import com.edusys.dao.ChuyenDeDAO;
import com.edusys.dao.HocVienDAO;
import com.edusys.dao.KhoaHocDAO;
import com.edusys.dao.NguoiHocDAO;
import com.edusys.entity.ChuyenDe;
import com.edusys.entity.HocVien;
import com.edusys.entity.KhoaHoc;
import com.edusys.entity.NguoiHoc;
import com.edusys.utils.Auth;
import com.edusys.utils.DateHelper;
import com.edusys.utils.MessegerHelper;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author XUÂN THÀNH
 */
public class QLHocVienJPanel extends javax.swing.JPanel {

    private DefaultComboBoxModel<ChuyenDe> modelCD;
    private DefaultComboBoxModel<KhoaHoc> modelKH;
    private DefaultTableModel dtmHV;
    private DefaultTableModel dtmNH;
    private ChuyenDeDAO cdDAO;
    private KhoaHocDAO khDAO;
    private NguoiHocDAO nhDAO;
    private HocVienDAO hvDAO;
    private QLHVLanguage lg;

    public QLHocVienJPanel() {
        initComponents();

        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCardQlHocVien = new javax.swing.JPanel();
        pnlQLHVTop = new javax.swing.JPanel();
        lblQLHocVienTitle = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        pnlCD = new javax.swing.JPanel();
        cbbChuyenDe_QLHV = new javax.swing.JComboBox<>();
        pnlKH = new javax.swing.JPanel();
        cbbKhoaHoc = new javax.swing.JComboBox<>();
        pnlQLHVBottom = new javax.swing.JPanel();
        pnlTabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnXoaHV = new javax.swing.JButton();
        btnSuaDiem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHocVien = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        pnlTimKiem = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnThemVaoKH = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();

        pnlCardQlHocVien.setBackground(new java.awt.Color(34, 40, 44));
        pnlCardQlHocVien.setLayout(new java.awt.BorderLayout());

        pnlQLHVTop.setBackground(new java.awt.Color(34, 40, 44));
        pnlQLHVTop.setPreferredSize(new java.awt.Dimension(891, 120));
        pnlQLHVTop.setLayout(new java.awt.BorderLayout());

        lblQLHocVienTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblQLHocVienTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblQLHocVienTitle.setText("QUẢN LÝ HỌC VIÊN");
        lblQLHocVienTitle.setToolTipText("");
        lblQLHocVienTitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblQLHocVienTitle.setPreferredSize(new java.awt.Dimension(34, 40));
        pnlQLHVTop.add(lblQLHocVienTitle, java.awt.BorderLayout.NORTH);

        jPanel6.setBackground(new java.awt.Color(34, 40, 44));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        pnlCD.setBackground(new java.awt.Color(34, 40, 44));
        pnlCD.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "CHUYÊN ĐỀ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(255, 102, 102))); // NOI18N

        cbbChuyenDe_QLHV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbChuyenDe_QLHVItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlCDLayout = new javax.swing.GroupLayout(pnlCD);
        pnlCD.setLayout(pnlCDLayout);
        pnlCDLayout.setHorizontalGroup(
            pnlCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbChuyenDe_QLHV, 0, 419, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCDLayout.setVerticalGroup(
            pnlCDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbChuyenDe_QLHV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel6.add(pnlCD);

        pnlKH.setBackground(new java.awt.Color(34, 40, 44));
        pnlKH.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "KHÓA HỌC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(255, 102, 102))); // NOI18N

        cbbKhoaHoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbKhoaHocItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlKHLayout = new javax.swing.GroupLayout(pnlKH);
        pnlKH.setLayout(pnlKHLayout);
        pnlKHLayout.setHorizontalGroup(
            pnlKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbKhoaHoc, 0, 419, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlKHLayout.setVerticalGroup(
            pnlKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel6.add(pnlKH);

        pnlQLHVTop.add(jPanel6, java.awt.BorderLayout.CENTER);

        pnlCardQlHocVien.add(pnlQLHVTop, java.awt.BorderLayout.PAGE_START);

        pnlQLHVBottom.setBackground(new java.awt.Color(34, 40, 44));
        pnlQLHVBottom.setLayout(new java.awt.BorderLayout());

        pnlTabs.setBackground(new java.awt.Color(34, 40, 44));
        pnlTabs.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel1.setBackground(new java.awt.Color(34, 40, 44));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(34, 40, 44));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnXoaHV.setText("Xóa khỏi khóa học");
        btnXoaHV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHVActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoaHV);

        btnSuaDiem.setText("Cập nhật điểm");
        btnSuaDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaDiemActionPerformed(evt);
            }
        });
        jPanel3.add(btnSuaDiem);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        tblHocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TT", "MÃ HV", "MÃ NH", "HỌ TÊN", "ĐIÊM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHocVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHocVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHocVien);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pnlTabs.addTab("HỌC VIÊN", jPanel1);

        jPanel2.setBackground(new java.awt.Color(34, 40, 44));
        jPanel2.setLayout(new java.awt.BorderLayout());

        pnlTimKiem.setBackground(new java.awt.Color(34, 40, 44));
        pnlTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TÌM KIẾM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlTimKiem.setPreferredSize(new java.awt.Dimension(898, 75));

        btnTimKiem.setText("Tìm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                .addGap(39, 39, 39)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimKiem)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(pnlTimKiem, java.awt.BorderLayout.PAGE_START);

        jPanel5.setBackground(new java.awt.Color(34, 40, 44));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnThemVaoKH.setText("Thêm vào khóa học");
        btnThemVaoKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemVaoKHActionPerformed(evt);
            }
        });
        jPanel5.add(btnThemVaoKH);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "GIỚI TÍNH", "NGÀY SINH", "ĐIỆN THOẠI", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNguoiHocMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNguoiHoc);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pnlTabs.addTab("NGƯỜI HỌC", jPanel2);

        pnlQLHVBottom.add(pnlTabs, java.awt.BorderLayout.CENTER);

        pnlCardQlHocVien.add(pnlQLHVBottom, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 903, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlCardQlHocVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlCardQlHocVien, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbChuyenDe_QLHVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbChuyenDe_QLHVItemStateChanged
        this.loadDataToCBBKhoaHoc();

        upDateStatus();
    }//GEN-LAST:event_cbbChuyenDe_QLHVItemStateChanged

    private void cbbKhoaHocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbKhoaHocItemStateChanged
        this.loadDataToTableHocVien();

        upDateStatus();
    }//GEN-LAST:event_cbbKhoaHocItemStateChanged

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        this.loadDataToTableNguoiHoc();

        upDateStatus();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThemVaoKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemVaoKHActionPerformed
        if (themVaoKhoaHoc()) {
            return;
        }
    }//GEN-LAST:event_btnThemVaoKHActionPerformed

    private void btnXoaHVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHVActionPerformed
        xoaHocVien();
    }//GEN-LAST:event_btnXoaHVActionPerformed

    private void btnSuaDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaDiemActionPerformed
        if (suaDiem()) {
            return;
        }
    }//GEN-LAST:event_btnSuaDiemActionPerformed

    private void tblHocVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHocVienMouseClicked
        upDateStatus();
    }//GEN-LAST:event_tblHocVienMouseClicked

    private void tblNguoiHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNguoiHocMouseClicked
        upDateStatus();
    }//GEN-LAST:event_tblNguoiHocMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaDiem;
    private javax.swing.JButton btnThemVaoKH;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoaHV;
    private javax.swing.JComboBox<String> cbbChuyenDe_QLHV;
    private javax.swing.JComboBox<String> cbbKhoaHoc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblQLHocVienTitle;
    private javax.swing.JPanel pnlCD;
    private javax.swing.JPanel pnlCardQlHocVien;
    private javax.swing.JPanel pnlKH;
    private javax.swing.JPanel pnlQLHVBottom;
    private javax.swing.JPanel pnlQLHVTop;
    private javax.swing.JTabbedPane pnlTabs;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JTable tblHocVien;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        //khai báo lớp hỗ trợ language
        this.lg = new QLHVLanguage(btnSuaDiem, btnThemVaoKH, btnTimKiem, btnXoaHV, lblQLHocVienTitle, pnlTabs, pnlTimKiem, pnlCD, pnlKH, tblHocVien, tblNguoiHoc);
        
        // khai báo các lớp DAO
        this.cdDAO = new ChuyenDeDAO();
        this.khDAO = new KhoaHocDAO();
        this.nhDAO = new NguoiHocDAO();
        this.hvDAO = new HocVienDAO();

        // khai báo các model combobox và table
        this.modelCD = (DefaultComboBoxModel) cbbChuyenDe_QLHV.getModel();
        this.modelKH = (DefaultComboBoxModel) cbbKhoaHoc.getModel();
        this.dtmNH = (DefaultTableModel) tblNguoiHoc.getModel();
        this.dtmHV = (DefaultTableModel) tblHocVien.getModel();

        //đổ dữ liệu lên cbb chuyên đề
        this.loadDataToCBBChuyenDe();
    }
    
    public void QLHVchangeLanguge() {
        this.lg.changeLanguage(LanguageSelected.getSelected);
    }

    private void loadDataToCBBChuyenDe() {
        this.modelCD.removeAllElements();
        List<ChuyenDe> list = null;
        try {
            list = cdDAO.selectALL();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        for (ChuyenDe cd : list) {
            modelCD.addElement(cd);
        }
        this.loadDataToCBBKhoaHoc();
    }

    private void loadDataToCBBKhoaHoc() {
        modelKH.removeAllElements();
        ArrayList<KhoaHoc> listKH = new ArrayList<>();
        ChuyenDe cd = (ChuyenDe) cbbChuyenDe_QLHV.getSelectedItem();
        if (cd != null) {
            try {
                listKH = this.khDAO.selectByQuery("SELECTBYMACD", cd.getMaCD());
                for (KhoaHoc kh : listKH) {
                    modelKH.addElement(kh);
                }
                this.loadDataToTableHocVien();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    private void loadDataToTableHocVien() {
        this.dtmHV.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cbbKhoaHoc.getSelectedItem();
        if (kh != null) {
            try {
                List<HocVien> list = hvDAO.selectByQuery("SELECT_BY_KHOAHOC", kh.getMaKH());
                if (list.size() > 0) {
                    for (int i = 0; i < list.size(); i++) {
                        HocVien hv = list.get(i);
                        String hoten = nhDAO.selectByID(hv.getMaNH()).getHoTen();
                        dtmHV.addRow(new Object[]{
                            i + 1,
                            hv.getMaHV(),
                            hv.getMaNH(),
                            hoten,
                            hv.getDiem()
                        });
                    }
                }
                this.loadDataToTableNguoiHoc();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }

    private void loadDataToTableNguoiHoc() {
        this.dtmNH.setRowCount(0);
        KhoaHoc kh = (KhoaHoc) cbbKhoaHoc.getSelectedItem();

        String keyword = "%" + txtTimKiem.getText() + "%";
        try {
            ArrayList<NguoiHoc> list = nhDAO.selectByQuery("SELECT_NOT_IN_COURSE", keyword, kh.getMaKH());
            for (NguoiHoc nh : list) {
                String gt;
                if (LanguageSelected.getSelected == 0) {
                    gt = nh.isGioiTinh() ? "Nam" : "Nữ";
                } else {
                    gt = nh.isGioiTinh() ? "Male" : "Female";
                }
                this.dtmNH.addRow(new Object[]{
                    nh.getMaNH().trim(),
                    nh.getHoTen(),
                    gt,
                    DateHelper.toString(nh.getNgaySinh(), "dd/MM/yyyy"),
                    nh.getDienThoai(),
                    nh.getEmail(),});
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private boolean themVaoKhoaHoc() {
        KhoaHoc kh = (KhoaHoc) cbbKhoaHoc.getSelectedItem();
        int[] rows = tblNguoiHoc.getSelectedRows();
        for (int row : rows) {
            String maNH = (String) tblNguoiHoc.getValueAt(row, 0);
            HocVien hv = new HocVien();
            hv.setDiem(0);
            hv.setMaKH(kh.getMaKH());
            hv.setMaNH(maNH);
            try {
                hvDAO.insert(hv);
            } catch (Exception ex) {
                ex.printStackTrace();
                MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn"), this);
                return true;
            }
        }
        this.loadDataToTableHocVien();
        this.pnlTabs.setSelectedIndex(0);
        return false;
    }

    private void upDateStatus() {
        int hv = this.tblHocVien.getSelectedRow();
        int nh = this.tblNguoiHoc.getSelectedRow();
        this.btnSuaDiem.setEnabled(hv > -1);
        this.btnXoaHV.setEnabled(hv > -1);
        this.btnThemVaoKH.setEnabled(nh > -1);
    }

    private void xoaHocVien() {
        if (!Auth.isManager()) {
            MessegerHelper.errorMesseger(new StringBuilder("Bạn không có quyền xóa học viên!"), this);
        } else {
            int[] rows = tblHocVien.getSelectedRows();
            if (rows.length > 0 && MessegerHelper.confirm(this, "Bạn có muốn xóa các học viên đã chọn không?")) {
                for (int row : rows) {
                    int maHV = (Integer) tblHocVien.getValueAt(row, 1);
                    try {
                        hvDAO.delete(maHV);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn!"), this);
                        return;
                    }
                }
                MessegerHelper.alert("Xóa học viên thành công!", this);
                this.loadDataToTableHocVien();
                upDateStatus();
            }
        }
    }

    private boolean suaDiem() throws NumberFormatException {
        for (int i = 0; i < tblHocVien.getRowCount(); i++) {
            int maHV = Integer.parseInt(tblHocVien.getValueAt(i, 1).toString());
            float diem = Float.parseFloat(tblHocVien.getValueAt(i, 4).toString());
            if (diem < 0 || diem > 10) {
                MessegerHelper.errorMesseger(new StringBuilder("Điểm phải nhỏ hơn 10 và phải lớn hơn 0!"), this);
                this.tblHocVien.setRowSelectionInterval(i, i);
                return true;
            }
            try {
                HocVien hv = hvDAO.selectByID(maHV);
                hv.setDiem(diem);
                hvDAO.update(hv);
            } catch (Exception ex) {
                ex.printStackTrace();
                MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn!"), this);
                return true;
            }
        }
        MessegerHelper.alert("Cập nhật điểm thành công!", this);
        return false;
    }

}
