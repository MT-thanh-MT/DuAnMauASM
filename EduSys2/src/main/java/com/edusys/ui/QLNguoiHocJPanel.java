/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

import com.edusys.Interface.BaseDAOInterface;
import com.edusys.Language.LanguageSelected;
import com.edusys.Language.QLNHLanguage;
import com.edusys.dao.NguoiHocDAO;
import com.edusys.entity.NguoiHoc;
import com.edusys.utils.Auth;
import com.edusys.utils.DateHelper;
import com.edusys.utils.MessegerHelper;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author XUÂN THÀNH
 */
public class QLNguoiHocJPanel extends javax.swing.JPanel {

    private DefaultTableModel dtm;
    private BaseDAOInterface dao;
    private int index;
    private QLNHLanguage lg;
    public QLNguoiHocJPanel() {
        initComponents();

        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        pnlCardQLNguoiHoc = new javax.swing.JPanel();
        lblQLNguoiHocTitle = new javax.swing.JLabel();
        pnlQLNH = new javax.swing.JPanel();
        pnlQLNHInput = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtMaNH = new javax.swing.JTextField();
        lblMaNH = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblHoTen = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txtSDT = new javax.swing.JTextField();
        lblSDT = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txtNgaySinh = new javax.swing.JTextField();
        lblNgaySinh = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        pnlGioiTinh = new javax.swing.JPanel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        pnlButton = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        pnlGhiChu = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        pnlTimKiem = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiemTheoTen = new javax.swing.JButton();
        btnTimKiemTatCa = new javax.swing.JButton();
        btnTimKiemTheoMa = new javax.swing.JButton();

        pnlCardQLNguoiHoc.setBackground(new java.awt.Color(34, 40, 44));
        pnlCardQLNguoiHoc.setLayout(new java.awt.BorderLayout());

        lblQLNguoiHocTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblQLNguoiHocTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNguoiHocTitle.setText("QUẢN LÝ NGƯỜI HỌC");
        lblQLNguoiHocTitle.setToolTipText("");
        lblQLNguoiHocTitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblQLNguoiHocTitle.setPreferredSize(new java.awt.Dimension(34, 40));
        pnlCardQLNguoiHoc.add(lblQLNguoiHocTitle, java.awt.BorderLayout.NORTH);

        pnlQLNH.setBackground(new java.awt.Color(34, 40, 44));

        pnlQLNHInput.setBackground(new java.awt.Color(34, 40, 44));
        pnlQLNHInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 102)));
        pnlQLNHInput.setLayout(new java.awt.GridLayout(0, 2));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 102)));
        jPanel1.setLayout(new java.awt.GridLayout(3, 0));

        jPanel8.setBackground(new java.awt.Color(34, 40, 44));

        lblMaNH.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblMaNH.setForeground(new java.awt.Color(255, 255, 255));
        lblMaNH.setText("Mã người học");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaNH)
                    .addComponent(lblMaNH, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMaNH)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        jPanel1.add(jPanel8);

        jPanel3.setBackground(new java.awt.Color(34, 40, 44));

        lblHoTen.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblHoTen.setForeground(new java.awt.Color(255, 255, 255));
        lblHoTen.setText("Họ và tên");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addComponent(txtHoTen))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHoTen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(34, 40, 44));

        lblSDT.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblSDT.setForeground(new java.awt.Color(255, 255, 255));
        lblSDT.setText("Số điện thoại");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT)
                    .addComponent(lblSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSDT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4);

        pnlQLNHInput.add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 102)));
        jPanel2.setLayout(new java.awt.GridLayout(3, 0));

        jPanel5.setBackground(new java.awt.Color(34, 40, 44));

        lblNgaySinh.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblNgaySinh.setForeground(new java.awt.Color(255, 255, 255));
        lblNgaySinh.setText("Ngày sinh");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addComponent(txtNgaySinh))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNgaySinh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        jPanel2.add(jPanel5);

        jPanel7.setBackground(new java.awt.Color(34, 40, 44));

        lblEmail.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Địa chỉ email");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addComponent(txtEmail))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel7);

        pnlGioiTinh.setBackground(new java.awt.Color(34, 40, 44));
        pnlGioiTinh.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Giới tính", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        rdoNam.setBackground(new java.awt.Color(34, 40, 44));
        buttonGroup1.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rdoNam.setForeground(new java.awt.Color(255, 255, 255));
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        rdoNu.setBackground(new java.awt.Color(34, 40, 44));
        buttonGroup1.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rdoNu.setForeground(new java.awt.Color(255, 255, 255));
        rdoNu.setText("Nữ");

        javax.swing.GroupLayout pnlGioiTinhLayout = new javax.swing.GroupLayout(pnlGioiTinh);
        pnlGioiTinh.setLayout(pnlGioiTinhLayout);
        pnlGioiTinhLayout.setHorizontalGroup(
            pnlGioiTinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGioiTinhLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoNam)
                .addGap(33, 33, 33)
                .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );
        pnlGioiTinhLayout.setVerticalGroup(
            pnlGioiTinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGioiTinhLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlGioiTinhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(pnlGioiTinh);

        pnlQLNHInput.add(jPanel2);

        pnlButton.setLayout(new java.awt.GridLayout(0, 2));

        jPanel12.setBackground(new java.awt.Color(34, 40, 44));

        btnThem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setPreferredSize(new java.awt.Dimension(65, 41));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel12.add(btnThem);

        btnSua.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setPreferredSize(new java.awt.Dimension(65, 41));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel12.add(btnSua);

        btnXoa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setPreferredSize(new java.awt.Dimension(65, 41));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel12.add(btnXoa);

        btnMoi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setPreferredSize(new java.awt.Dimension(65, 41));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        jPanel12.add(btnMoi);

        pnlButton.add(jPanel12);

        jPanel11.setBackground(new java.awt.Color(34, 40, 44));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_first.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        jPanel11.add(btnFirst);

        btnPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_prev.png"))); // NOI18N
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });
        jPanel11.add(btnPre);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel11.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel11.add(btnLast);

        pnlButton.add(jPanel11);

        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "GIỚI TÍNH", "NGÀY SINH", "ĐIỆN THOẠI", "EMAIL", "MÃ NV", "NGÀY ĐK", "GHICHU"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNguoiHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNguoiHoc);
        if (tblNguoiHoc.getColumnModel().getColumnCount() > 0) {
            tblNguoiHoc.getColumnModel().getColumn(8).setMinWidth(0);
            tblNguoiHoc.getColumnModel().getColumn(8).setPreferredWidth(0);
            tblNguoiHoc.getColumnModel().getColumn(8).setMaxWidth(0);
        }

        pnlGhiChu.setBackground(new java.awt.Color(34, 40, 44));
        pnlGhiChu.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ghi Chú", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane2.setViewportView(txtGhiChu);

        javax.swing.GroupLayout pnlGhiChuLayout = new javax.swing.GroupLayout(pnlGhiChu);
        pnlGhiChu.setLayout(pnlGhiChuLayout);
        pnlGhiChuLayout.setHorizontalGroup(
            pnlGhiChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        pnlGhiChuLayout.setVerticalGroup(
            pnlGhiChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGhiChuLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlTimKiem.setBackground(new java.awt.Color(34, 40, 44));
        pnlTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TÌM KIẾM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        btnTimKiemTheoTen.setText("Tìm theo tên");
        btnTimKiemTheoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTheoTenActionPerformed(evt);
            }
        });

        btnTimKiemTatCa.setText("Tất cả");
        btnTimKiemTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTatCaActionPerformed(evt);
            }
        });

        btnTimKiemTheoMa.setText("Tìm theo mã");
        btnTimKiemTheoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemTheoMaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addComponent(btnTimKiemTheoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnTimKiemTheoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnTimKiemTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlTimKiemLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnTimKiemTatCa, btnTimKiemTheoMa, btnTimKiemTheoTen});

        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTimKiemLayout.createSequentialGroup()
                .addGroup(pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem)
                    .addComponent(btnTimKiemTheoTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTimKiemTatCa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTimKiemTheoMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlQLNHLayout = new javax.swing.GroupLayout(pnlQLNH);
        pnlQLNH.setLayout(pnlQLNHLayout);
        pnlQLNHLayout.setHorizontalGroup(
            pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLNHLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlQLNHLayout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(pnlQLNHInput, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
            .addGroup(pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLNHLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pnlGhiChu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 883, Short.MAX_VALUE)
                        .addComponent(jScrollPane1))
                    .addContainerGap()))
        );
        pnlQLNHLayout.setVerticalGroup(
            pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLNHLayout.createSequentialGroup()
                .addComponent(pnlTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 535, Short.MAX_VALUE))
            .addGroup(pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlQLNHLayout.createSequentialGroup()
                    .addGap(77, 77, 77)
                    .addComponent(pnlQLNHInput, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(326, Short.MAX_VALUE)))
            .addGroup(pnlQLNHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlQLNHLayout.createSequentialGroup()
                    .addGap(270, 270, 270)
                    .addComponent(pnlGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pnlCardQLNguoiHoc.add(pnlQLNH, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 903, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlCardQLNguoiHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlCardQLNguoiHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblNguoiHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNguoiHocMouseClicked
        if (mouseClicked())
            return;
    }//GEN-LAST:event_tblNguoiHocMouseClicked

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (xoaNguoiHoc())
            return;
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (themNguoiHoc())
            return;
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (suaNguoiHoc())
            return;
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnTimKiemTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTatCaActionPerformed
        LoadDataToTable();
    }//GEN-LAST:event_btnTimKiemTatCaActionPerformed

    private void btnTimKiemTheoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTheoMaActionPerformed
        String id = txtTimKiem.getText();
        if (id.trim().isEmpty()) {
            MessegerHelper.errorMesseger(new StringBuilder("Bạn phải nhập mã muốn tìm vào ô tìm kiếm!"), this);
            return;
        }
        if (!checkTrung(id)) {
            MessegerHelper.errorMesseger(new StringBuilder("Không tồn tại mã: " + id), this);
            return;
        }

        for (int i = 0; i < tblNguoiHoc.getRowCount(); i++) {
            if (id.equals(tblNguoiHoc.getValueAt(i, 0))) {
                this.index = i;
            }
        }
        this.tblNguoiHoc.setRowSelectionInterval(index, index);
        showForm(index);
    }//GEN-LAST:event_btnTimKiemTheoMaActionPerformed

    private void btnTimKiemTheoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemTheoTenActionPerformed
        String name = txtTimKiem.getText();
        if (name.trim().isEmpty()) {
            MessegerHelper.errorMesseger(new StringBuilder("Bạn phải nhập họ tên muốn tìm vào ô tìm kiếm!"), this);
            return;
        }

        try {
            
            ArrayList<NguoiHoc> list = new ArrayList<>();
            list = dao.selectByQuery("SELECTBYNAME", "%" + name + "%");
            this.dtm.setRowCount(0);
            for (NguoiHoc nh : list) {
                setDataRow(nh);
            }
            this.index = 0;
            updateStatus();
            showForm(index);
        } catch (Exception ex) {
            MessegerHelper.errorMesseger(new StringBuilder("không có dữ liệu!"), this);
            ex.printStackTrace();
            return;
        }

    }//GEN-LAST:event_btnTimKiemTheoTenActionPerformed

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNamActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiemTatCa;
    private javax.swing.JButton btnTimKiemTheoMa;
    private javax.swing.JButton btnTimKiemTheoTen;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblMaNH;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblQLNguoiHocTitle;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlCardQLNguoiHoc;
    private javax.swing.JPanel pnlGhiChu;
    private javax.swing.JPanel pnlGioiTinh;
    private javax.swing.JPanel pnlQLNH;
    private javax.swing.JPanel pnlQLNHInput;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNH;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        //khai báo lớp hỗ trợ ngôn ngữ
        this.lg = new QLNHLanguage(btnMoi, btnSua, btnThem, btnXoa, btnTimKiemTatCa, btnTimKiemTheoMa, btnTimKiemTheoTen, lblEmail, lblHoTen, lblMaNH, lblNgaySinh, lblSDT, lblQLNguoiHocTitle, rdoNam, rdoNu, pnlGhiChu, pnlTimKiem, pnlGioiTinh, tblNguoiHoc);
        
        //Khai báo lớp dao
        this.dao = new NguoiHocDAO();

        //khai báo dtm
        this.dtm = (DefaultTableModel) tblNguoiHoc.getModel();

        //Load dữ liệu lên bảng
        LoadDataToTable();
    }
    
    public void QLNHchangeLanguge() {
        this.lg.changeLanguage(LanguageSelected.getSelected);
    }
    public void LoadDataToTable() {
        //load dữ liệu từ cơ sở dữ liệu vào bảng
        this.dtm.setRowCount(0);
        ArrayList<NguoiHoc> list = new ArrayList<>();
        try {
            list = dao.selectALL();
            for (NguoiHoc nh : list) {
                setDataRow(nh);
            }
            this.index = 0;
            updateStatus();
            showForm(index);
        } catch (Exception ex) {
            MessegerHelper.errorMesseger(new StringBuilder(ex.getMessage()), this);
        }
    }

    private void setDataRow(NguoiHoc nh) {
        //thêm một row vào bảng
        String gt;
        if (LanguageSelected.getSelected == 0) {
            gt = nh.isGioiTinh() ? "Nam" : "Nữ";
        } else {
            gt = nh.isGioiTinh() ? "Male" : "Female";
        }
        this.dtm.addRow(new Object[]{
            nh.getMaNH().trim(),
            nh.getHoTen(),
            gt,
            DateHelper.toString(nh.getNgaySinh(), "dd/MM/yyyy"),
            nh.getDienThoai(),
            nh.getEmail(),
            nh.getMaNV(),
            DateHelper.toString(nh.getNgayDK(), "dd/MM/yyyy"),
            nh.getGhiChu()
        });
    }

    private void updateStatus() {
        //cập nhập trạng thái cho các button điều hướng
        boolean first = (this.index <= 0);
        boolean last = (this.index == tblNguoiHoc.getRowCount() - 1);
        this.btnFirst.setEnabled(!first);
        this.btnPre.setEnabled(!first);
        this.btnLast.setEnabled(!last);
        this.btnNext.setEnabled(!last);
        if (index == -1) {
            this.tblNguoiHoc.setRowSelectionAllowed(false);
        } else {
            this.tblNguoiHoc.setRowSelectionAllowed(true);
        }
    }

    private void showForm(int i) {
        //hiển thị dữ liệu lên form tương ứng
        boolean isGT = false;
        if (tblNguoiHoc.getValueAt(i, 2).equals("Nam") || tblNguoiHoc.getValueAt(i, 2).equals("Male")) {
            isGT = true;
        }
        this.txtMaNH.setText(tblNguoiHoc.getValueAt(i, 0) + "");
        this.txtHoTen.setText(tblNguoiHoc.getValueAt(i, 1) + "");
        this.rdoNam.setSelected(isGT);
        this.rdoNu.setSelected(!isGT);
        this.txtNgaySinh.setText(tblNguoiHoc.getValueAt(i, 3) + "");
        this.txtSDT.setText(tblNguoiHoc.getValueAt(i, 4) + "");
        this.txtEmail.setText(tblNguoiHoc.getValueAt(i, 5) + "");
        this.txtGhiChu.setText(tblNguoiHoc.getValueAt(i, 8) + "");
        tblNguoiHoc.setRowSelectionInterval(i, i);
    }

    private NguoiHoc getForm() {
        //lấy dữ liệu đã nhập từ trên form
        String manh = txtMaNH.getText().trim();
        String hoTen = txtHoTen.getText();
        Date ngaySinh = DateHelper.toDate(txtNgaySinh.getText(), "dd/MM/yyyy");
        boolean gioiTinh = rdoNam.isSelected();
        String sdt = txtSDT.getText();
        String Email = txtEmail.getText();
        String ghiChu = txtGhiChu.getText();
        String maNV = Auth.nguoiDungHienTai.getMaNV();
        Date ngayDK = DateHelper.toDate(DateHelper.toString(new Date(), "dd/MM/yyyy"), "dd/MM/yyyy");
        return new NguoiHoc(manh, hoTen, ngaySinh, gioiTinh, sdt, Email, ghiChu, maNV, ngayDK);
    }

    private void clearForm() {
        //xóa trắng form
        this.txtMaNH.setText("");
        this.txtHoTen.setText("");
        this.txtEmail.setText("");
        this.txtNgaySinh.setText("");
        this.txtSDT.setText("");
        this.txtGhiChu.setText("");
        this.rdoNam.setSelected(true);
        this.index = -1;
        updateStatus();
    }

    private boolean mouseClicked() {
        //xử lý sưk kiện click lên table
        this.index = tblNguoiHoc.getSelectedRow();
        updateStatus();
        if (index == -1) {
            return true;
        }
        showForm(index);
        return false;
    }

    private void next() {
        index++;
        updateStatus();
        showForm(index);
    }

    private void last() {
        index = tblNguoiHoc.getRowCount() - 1;
        updateStatus();
        showForm(index);
    }

    private void prev() {
        index--;
        updateStatus();
        showForm(index);
    }

    private void first() {
        index = 0;
        updateStatus();
        showForm(index);
    }

    private boolean checkTrung(String maNH) {
        try {
            if (this.dao.selectByID(maNH) != null) {
                return true;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn"), this);
            return true;
        }
        return false;
    }

    private boolean checkForm() {
        //checkRong
        StringBuilder loi = new StringBuilder();
        // check mã người học
        if (txtMaNH.getText().trim().isEmpty()) {
            loi.append("Không được để trống mã người học\n");
        } else if (txtMaNH.getText().length() > 50) {
            loi.append("Mã người học không được quá 50 ký tự\n");
        }
        //check họ tên nhân viên
        Pattern pHoTen = Pattern.compile("^[\\p{L} .'-]+$");
        if (txtHoTen.getText().trim().isEmpty()) {
            loi.append("Không được để trống họ tên người học\n");
        } else if (!pHoTen.matcher(txtHoTen.getText()).find()) {
            loi.append("Họ tên không hợp lệ\n");
        } else if (txtHoTen.getText().length() > 50) {
            loi.append("Họ tên người học không được quá 50 ký tự\n");
        }
        //check sdt
        if (txtSDT.getText().trim().isEmpty()) {
            loi.append("Không được để trống số điện thoại người học\n");
        } else if (!txtSDT.getText().matches("^(0|\\+84)(\\s|\\.)?((3[2-9])|(5[689])|(7[06-9])|(8[1-689])|(9[0-46-9]))(\\d)(\\s|\\.)?(\\d{3})(\\s|\\.)?(\\d{3})$")) {
            loi.append("Số điện thoại không hợp lệ hoặc không đủ 10 số\n");
        }
        //check ngày sinh
        if (txtNgaySinh.getText().trim().isEmpty()) {
            loi.append("Bạn phải nhập ngày sinh\n");
        } else {
            try {
                Date ns = DateHelper.toDate(txtNgaySinh.getText(), "dd/MM/yyyy");
                Date now = new Date();
                if (now.getYear() - ns.getYear() < 18) {
                    loi.append("tuổi phải lớn hơn 18");
                }
            } catch (Exception e) {
                e.printStackTrace();
                loi.append("Sai định dạng(dd/MM/yyyy)");
            }
        }
        //check Email
        Pattern pEmail = Pattern.compile("^\\w+@+[a-zA-Z]+(\\.[a-zA-Z]+){1,2}$");
        if (txtEmail.getText().trim().isEmpty()) {
            loi.append("Không được để trống Email\n");
        } else if (!pEmail.matcher(txtEmail.getText()).find()) {
            loi.append("Email phải đúng định dạng!\nVD: ...@gmail.com hoặc ...@fpt.edu.vn\n");
        }
        //hiển thị thông báo lỗi
        if (loi.length() > 0) {
            MessegerHelper.errorMesseger(loi, this);
            return true;
        }
        return false;
    }

    private boolean themNguoiHoc() {
        if (checkForm()) {
            return true;
        }
        String id = txtMaNH.getText();
        if (checkTrung(id)) {
            MessegerHelper.errorMesseger(new StringBuilder("Mã người học đã tồn tại"), this);
            return true;
        }
        try {
            this.dao.insert(getForm());
            MessegerHelper.alert("Thêm thành công", this);
            setDataRow(getForm());
            this.index = tblNguoiHoc.getRowCount() - 1;
            this.tblNguoiHoc.setRowSelectionInterval(index, index);
            showForm(index);
        } catch (Exception ex) {
            ex.printStackTrace();
            MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn"), this);
            return true;
        }
        return false;
    }

    private boolean suaNguoiHoc() {
        String id = txtMaNH.getText();
        if (checkForm()) {
            return true;
        }
        //check trùng
        if (!checkTrung(id)) {
            MessegerHelper.errorMesseger(new StringBuilder("Mã người học này không tồn tại!\n"), this);
            return true;
        }

        //sủa chuyên đề
        try {
            this.dao.update(getForm());
            MessegerHelper.alert("Sửa thành công", this);

            LoadDataToTable();
        } catch (Exception ex) {
            MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn!"), this);
            ex.printStackTrace();
            return true;
        }
        for (int i = 0; i < tblNguoiHoc.getRowCount(); i++) {
            if (id.equals(tblNguoiHoc.getValueAt(i, 0))) {
                this.index = i;
            }
        }
        this.tblNguoiHoc.setRowSelectionInterval(index, index);
        showForm(index);
        return false;
    }

    private String nhapMaNH(String maNH) {
        //Bắt phải nhập không nhập thì bấm cancel mới thoát được nhá
        if (maNH.isEmpty()) {
            maNH = String.valueOf(MessegerHelper.prompt(this, "Bạn phải nhập vào mã người học muốn xóa"));
            if (maNH.isEmpty()) {
                maNH = nhapMaNH(maNH);
            }
        }
        if (!checkTrung(maNH)) {
            maNH = String.valueOf(MessegerHelper.prompt(this, "Mã người học " + maNH + " này không tồn tại\n"
                    + "Xin hãy kiểm tra lại"));
            if (!checkTrung(maNH)) {
                maNH = nhapMaNH(maNH);
            }
        }
        return maNH;
    }

    private boolean xoaNguoiHoc() {
        String maNH = txtMaNH.getText();
        maNH = nhapMaNH(maNH);
        if (MessegerHelper.confirm(this, "Bạn có muốn xóa Người Học: " + maNH + " này không?")) {
            try {
                this.dao.delete(maNH);
                MessegerHelper.alert("Xóa thành công", this);
                for (int i = 0; i < tblNguoiHoc.getRowCount(); i++) {
                    if (maNH.equals(tblNguoiHoc.getValueAt(i, 0))) {
                        this.index = i;
                    }
                }
                this.dtm.removeRow(index);
                showForm(index > tblNguoiHoc.getRowCount() - 1 ? tblNguoiHoc.getRowCount() - 1 : index);
            } catch (Exception ex) {
                MessegerHelper.errorMesseger(new StringBuilder("Không Thể Xóa Người Học Đang Là Học Viên!"), this);
//                ex.printStackTrace();
                return true;
            }
        }
        return false;
    }
}
