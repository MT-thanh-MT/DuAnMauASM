/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

import com.edusys.Interface.BaseDAOInterface;
import com.edusys.Language.LanguageSelected;
import com.edusys.Language.QLNVLanguage;
import com.edusys.dao.NhanVienDao;
import com.edusys.entity.NhanVien;
import com.edusys.utils.MessegerHelper;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author XUÂN THÀNH
 */
public class QLNhanVienJPanel extends javax.swing.JPanel {

    private QLNVLanguage QLNVLG;
    private DefaultTableModel dtm;
    private BaseDAOInterface dao;
    private int index;

    public QLNhanVienJPanel() {
        initComponents();

        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        pnlCardQLNhanVien = new javax.swing.JPanel();
        lblQLNhanVienTitle = new javax.swing.JLabel();
        pnlQLNV = new javax.swing.JPanel();
        pnlQLNVInput = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtQLNVHoTen = new javax.swing.JTextField();
        lblQLNVHoTen = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblQLNVMaNV = new javax.swing.JLabel();
        txtQLNVMaNV = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblQLNVMatKhau = new javax.swing.JLabel();
        txtQLNVMatKhau = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        lblQLNVMatKhau2 = new javax.swing.JLabel();
        txtQLNVMatKhau2 = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        pnlVaiTro = new javax.swing.JPanel();
        rdoQLNVTruongPhong = new javax.swing.JRadioButton();
        rdoQLNVNhanVien = new javax.swing.JRadioButton();
        pnlTrangThai = new javax.swing.JPanel();
        rdoKhoa = new javax.swing.JRadioButton();
        rdoMoKhoa = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        btnQLNVThem = new javax.swing.JButton();
        btnQLNVSua = new javax.swing.JButton();
        btnQLNVXoa = new javax.swing.JButton();
        btnQLNVMoi = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        btnQLNVFirst = new javax.swing.JButton();
        btnQLNVPre = new javax.swing.JButton();
        btnQLNVNext = new javax.swing.JButton();
        btnQLNVLast = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLNV = new javax.swing.JTable();

        setBackground(new java.awt.Color(34, 40, 44));

        pnlCardQLNhanVien.setBackground(new java.awt.Color(34, 40, 44));
        pnlCardQLNhanVien.setLayout(new java.awt.BorderLayout());

        lblQLNhanVienTitle.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblQLNhanVienTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNhanVienTitle.setText("QUẢN LÝ NHÂN VIÊN QUẢN TRỊ");
        lblQLNhanVienTitle.setPreferredSize(new java.awt.Dimension(382, 50));
        lblQLNhanVienTitle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pnlCardQLNhanVien.add(lblQLNhanVienTitle, java.awt.BorderLayout.PAGE_START);

        pnlQLNV.setBackground(new java.awt.Color(34, 40, 44));

        pnlQLNVInput.setBackground(new java.awt.Color(34, 40, 44));
        pnlQLNVInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 102), 2));
        pnlQLNVInput.setLayout(new java.awt.GridLayout(0, 2));

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(255, 204, 102)));
        jPanel1.setLayout(new java.awt.GridLayout(3, 0));

        jPanel8.setBackground(new java.awt.Color(34, 40, 44));

        lblQLNVHoTen.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblQLNVHoTen.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNVHoTen.setText("Họ và tên");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQLNVHoTen)
                    .addComponent(lblQLNVHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQLNVHoTen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQLNVHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel8);

        jPanel3.setBackground(new java.awt.Color(34, 40, 44));

        lblQLNVMaNV.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblQLNVMaNV.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNVMaNV.setText("Mã nhân viên");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQLNVMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addComponent(txtQLNVMaNV))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQLNVMaNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQLNVMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(34, 40, 44));

        lblEmail.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Email");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail)
                    .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4);

        pnlQLNVInput.add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(255, 204, 102)));
        jPanel2.setLayout(new java.awt.GridLayout(3, 0));

        jPanel5.setBackground(new java.awt.Color(34, 40, 44));

        lblQLNVMatKhau.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblQLNVMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNVMatKhau.setText("Mật khẩu");

        txtQLNVMatKhau.setPreferredSize(new java.awt.Dimension(7, 30));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtQLNVMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblQLNVMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQLNVMatKhau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQLNVMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel5);

        jPanel7.setBackground(new java.awt.Color(34, 40, 44));
        jPanel7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(204, 204, 204)));

        lblQLNVMatKhau2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblQLNVMatKhau2.setForeground(new java.awt.Color(255, 255, 255));
        lblQLNVMatKhau2.setText("Xác nhận mật khẩu");

        txtQLNVMatKhau2.setPreferredSize(new java.awt.Dimension(7, 30));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQLNVMatKhau2, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addComponent(txtQLNVMatKhau2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblQLNVMatKhau2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQLNVMatKhau2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel7);

        jPanel6.setLayout(new java.awt.GridLayout(0, 2, 1, 0));

        pnlVaiTro.setBackground(new java.awt.Color(34, 40, 44));
        pnlVaiTro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Vai trò", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlVaiTro.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        rdoQLNVTruongPhong.setBackground(new java.awt.Color(34, 40, 44));
        buttonGroup1.add(rdoQLNVTruongPhong);
        rdoQLNVTruongPhong.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rdoQLNVTruongPhong.setForeground(new java.awt.Color(255, 255, 255));
        rdoQLNVTruongPhong.setSelected(true);
        rdoQLNVTruongPhong.setText("Trưởng phòng");
        pnlVaiTro.add(rdoQLNVTruongPhong);

        rdoQLNVNhanVien.setBackground(new java.awt.Color(34, 40, 44));
        buttonGroup1.add(rdoQLNVNhanVien);
        rdoQLNVNhanVien.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rdoQLNVNhanVien.setForeground(new java.awt.Color(255, 255, 255));
        rdoQLNVNhanVien.setText("Nhân viên");
        pnlVaiTro.add(rdoQLNVNhanVien);

        jPanel6.add(pnlVaiTro);

        pnlTrangThai.setBackground(new java.awt.Color(34, 40, 44));
        pnlTrangThai.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Trạng thái", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlTrangThai.setPreferredSize(new java.awt.Dimension(247, 63));
        pnlTrangThai.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 10, 10));

        rdoKhoa.setBackground(new java.awt.Color(34, 40, 44));
        buttonGroup2.add(rdoKhoa);
        rdoKhoa.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rdoKhoa.setForeground(new java.awt.Color(255, 255, 255));
        rdoKhoa.setText("Khóa");
        pnlTrangThai.add(rdoKhoa);

        rdoMoKhoa.setBackground(new java.awt.Color(34, 40, 44));
        buttonGroup2.add(rdoMoKhoa);
        rdoMoKhoa.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rdoMoKhoa.setForeground(new java.awt.Color(255, 255, 255));
        rdoMoKhoa.setSelected(true);
        rdoMoKhoa.setText("Mở khóa");
        pnlTrangThai.add(rdoMoKhoa);

        jPanel6.add(pnlTrangThai);

        jPanel2.add(jPanel6);

        pnlQLNVInput.add(jPanel2);

        jPanel10.setLayout(new java.awt.GridLayout(0, 3));

        jPanel12.setBackground(new java.awt.Color(34, 40, 44));

        btnQLNVThem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnQLNVThem.setText("Thêm");
        btnQLNVThem.setPreferredSize(new java.awt.Dimension(70, 41));
        btnQLNVThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVThemActionPerformed(evt);
            }
        });
        jPanel12.add(btnQLNVThem);

        btnQLNVSua.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnQLNVSua.setText("Sửa");
        btnQLNVSua.setPreferredSize(new java.awt.Dimension(70, 41));
        btnQLNVSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVSuaActionPerformed(evt);
            }
        });
        jPanel12.add(btnQLNVSua);

        btnQLNVXoa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnQLNVXoa.setText("Xóa");
        btnQLNVXoa.setPreferredSize(new java.awt.Dimension(70, 41));
        btnQLNVXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVXoaActionPerformed(evt);
            }
        });
        jPanel12.add(btnQLNVXoa);

        btnQLNVMoi.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnQLNVMoi.setText("Mới");
        btnQLNVMoi.setPreferredSize(new java.awt.Dimension(70, 41));
        btnQLNVMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVMoiActionPerformed(evt);
            }
        });
        jPanel12.add(btnQLNVMoi);

        jPanel10.add(jPanel12);

        jPanel9.setBackground(new java.awt.Color(34, 40, 44));

        txtTimKiem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTimKiem.setForeground(new java.awt.Color(255, 0, 0));
        txtTimKiem.setText("Nhập mã nhân viên cần tìm");
        txtTimKiem.setPreferredSize(new java.awt.Dimension(230, 41));
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });
        jPanel9.add(txtTimKiem);

        btnTimKiem.setBackground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/zoom32.png"))); // NOI18N
        btnTimKiem.setPreferredSize(new java.awt.Dimension(80, 41));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel9.add(btnTimKiem);

        jPanel10.add(jPanel9);

        jPanel11.setBackground(new java.awt.Color(34, 40, 44));

        btnQLNVFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_first.png"))); // NOI18N
        btnQLNVFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVFirstActionPerformed(evt);
            }
        });
        jPanel11.add(btnQLNVFirst);

        btnQLNVPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_prev.png"))); // NOI18N
        btnQLNVPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVPreActionPerformed(evt);
            }
        });
        jPanel11.add(btnQLNVPre);

        btnQLNVNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_next.png"))); // NOI18N
        btnQLNVNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVNextActionPerformed(evt);
            }
        });
        jPanel11.add(btnQLNVNext);

        btnQLNVLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icons/rnd_br_last.png"))); // NOI18N
        btnQLNVLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNVLastActionPerformed(evt);
            }
        });
        jPanel11.add(btnQLNVLast);

        jPanel10.add(jPanel11);

        tblQLNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NV", "MẬT KHẨU", "HỌ VÀ TÊN", "VAI TRÒ", "EMAIL", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLNV);

        javax.swing.GroupLayout pnlQLNVLayout = new javax.swing.GroupLayout(pnlQLNV);
        pnlQLNV.setLayout(pnlQLNVLayout);
        pnlQLNVLayout.setHorizontalGroup(
            pnlQLNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(pnlQLNVLayout.createSequentialGroup()
                .addGroup(pnlQLNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQLNVLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addComponent(pnlQLNVInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlQLNVLayout.setVerticalGroup(
            pnlQLNVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLNVLayout.createSequentialGroup()
                .addComponent(pnlQLNVInput, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlCardQLNhanVien.add(pnlQLNV, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1008, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlCardQLNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(pnlCardQLNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnQLNVNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVNextActionPerformed
        next();
    }//GEN-LAST:event_btnQLNVNextActionPerformed

    private void tblQLNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLNVMouseClicked
        if (mouseClicked())
            return;
    }//GEN-LAST:event_tblQLNVMouseClicked

    private void btnQLNVLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVLastActionPerformed
        last();
    }//GEN-LAST:event_btnQLNVLastActionPerformed

    private void btnQLNVPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVPreActionPerformed
        prev();
    }//GEN-LAST:event_btnQLNVPreActionPerformed

    private void btnQLNVFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVFirstActionPerformed
        first();
    }//GEN-LAST:event_btnQLNVFirstActionPerformed

    private void btnQLNVMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnQLNVMoiActionPerformed

    private void btnQLNVThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVThemActionPerformed
        if (themNhanVien())
            return;
    }//GEN-LAST:event_btnQLNVThemActionPerformed

    private void btnQLNVSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVSuaActionPerformed
        if (suaNhanVien())
            return;
    }//GEN-LAST:event_btnQLNVSuaActionPerformed

    private void btnQLNVXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNVXoaActionPerformed
        if (xoaNhanVien())
            return;
    }//GEN-LAST:event_btnQLNVXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        if (txtTimKiem.getText().equals("Nhập mã nhân viên cần tìm") || txtTimKiem.getText().equals("Enter staff ID") || txtTimKiem.getText().trim().isEmpty()) {
            timKiemFocus();
            return;
        }
        String manv = txtTimKiem.getText();
        if (!checkTrung(manv)) {
            MessegerHelper.errorMesseger(new StringBuilder("Mã nhân viên này không tồn tại!"), this);
            return;
        }
        for (int i = 0; i < tblQLNV.getRowCount(); i++) {
            if (manv.equals(tblQLNV.getValueAt(i, 0))) {
                index = i;
                showForm(index);
                updateStatus();
            }
        }

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        if (txtTimKiem.getText().equals("Nhập mã nhân viên cần tìm") || txtTimKiem.getText().equals("Enter staff ID")) {
            txtTimKiem.setText("");
            txtTimKiem.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        timKiemFocus();
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        EnterAcctions(evt);
    }//GEN-LAST:event_txtTimKiemKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQLNVFirst;
    private javax.swing.JButton btnQLNVLast;
    private javax.swing.JButton btnQLNVMoi;
    private javax.swing.JButton btnQLNVNext;
    private javax.swing.JButton btnQLNVPre;
    private javax.swing.JButton btnQLNVSua;
    private javax.swing.JButton btnQLNVThem;
    private javax.swing.JButton btnQLNVXoa;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblQLNVHoTen;
    private javax.swing.JLabel lblQLNVMaNV;
    private javax.swing.JLabel lblQLNVMatKhau;
    private javax.swing.JLabel lblQLNVMatKhau2;
    private javax.swing.JLabel lblQLNhanVienTitle;
    private javax.swing.JPanel pnlCardQLNhanVien;
    private javax.swing.JPanel pnlQLNV;
    private javax.swing.JPanel pnlQLNVInput;
    private javax.swing.JPanel pnlTrangThai;
    private javax.swing.JPanel pnlVaiTro;
    private javax.swing.JRadioButton rdoKhoa;
    private javax.swing.JRadioButton rdoMoKhoa;
    private javax.swing.JRadioButton rdoQLNVNhanVien;
    private javax.swing.JRadioButton rdoQLNVTruongPhong;
    private javax.swing.JTable tblQLNV;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtQLNVHoTen;
    private javax.swing.JTextField txtQLNVMaNV;
    private javax.swing.JPasswordField txtQLNVMatKhau;
    private javax.swing.JPasswordField txtQLNVMatKhau2;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        //khai báo Quản lý nhân viên language
        this.QLNVLG = new QLNVLanguage(btnQLNVSua, btnQLNVThem, btnQLNVXoa, btnQLNVMoi, lblQLNVHoTen, lblQLNVMaNV, lblQLNVMatKhau, lblQLNVMatKhau2, lblEmail, lblQLNhanVienTitle, rdoQLNVNhanVien, rdoQLNVTruongPhong, rdoKhoa, rdoMoKhoa, tblQLNV, pnlVaiTro, pnlTrangThai);

        //Khai báo lớp dao
        this.dao = new NhanVienDao();

        //khai báo dtm
        this.dtm = (DefaultTableModel) tblQLNV.getModel();

        //Load dữ liệu lên bảng
        LoadDataToTable();
    }

    public void QLNVchangeLanguge() {
        this.QLNVLG.changeLanguage(LanguageSelected.getSelected);
        this.QLNVLG.changeLanguageForTable(LanguageSelected.getSelected);
        if (LanguageSelected.getSelected == 0 && txtTimKiem.getText().equals("Enter staff ID")) {
            txtTimKiem.setText("Nhập mã nhân viên cần tìm");
        } else if (LanguageSelected.getSelected == 1 && txtTimKiem.getText().equals("Nhập mã nhân viên cần tìm")) {
            txtTimKiem.setText("Enter staff ID");
        }
    }

    private void LoadDataToTable() {
        //load dữ liệu từ cơ sở dữ liệu vào bảng
        this.dtm.setRowCount(0);
        ArrayList<NhanVien> list = new ArrayList<>();
        try {
            list = dao.selectALL();
            for (NhanVien nv : list) {
                setDataRow(nv);
            }
            this.index = 0;
            updateStatus();
            showForm(index);
        } catch (Exception ex) {
            MessegerHelper.errorMesseger(new StringBuilder(ex.getMessage()), this);
        }
    }

    private void setDataRow(NhanVien nv) {
        //thêm một row vào bảng
        String tt, vt;
        if (LanguageSelected.getSelected == 0) {
            tt = nv.isTrangThai() ? "Mở khóa" : "Khóa";
            vt = nv.isVaiTro() ? "Quản Trị" : "Nhân viên";
        } else {
            tt = nv.isTrangThai() ? "Unlock" : "Lock";
            vt = nv.isVaiTro() ? "Manager" : "Staff";
        }
        this.dtm.addRow(new Object[]{
            nv.getMaNV(),
            nv.getMatKhau(),
            nv.getHoTen(),
            vt,
            nv.getEmail(),
            tt
        });
    }

    private void showForm(int i) {
        //hiển thị dữ liệu lên form tương ứng
        boolean isVT = false, isTT = false;
        if (tblQLNV.getValueAt(i, 3).equals("Quản Trị") || tblQLNV.getValueAt(i, 3).equals("Admin")) {
            isVT = true;
        }
        if (tblQLNV.getValueAt(i, 5).equals("Mở khóa") || tblQLNV.getValueAt(i, 5).equals("Unlock")) {
            isTT = true;
        }

        this.txtQLNVMaNV.setText(tblQLNV.getValueAt(i, 0) + "");
        this.txtQLNVHoTen.setText(tblQLNV.getValueAt(i, 2) + "");
        this.rdoQLNVTruongPhong.setSelected(isVT);
        this.rdoQLNVNhanVien.setSelected(!isVT);
        this.txtEmail.setText(tblQLNV.getValueAt(i, 4) + "");
        this.rdoMoKhoa.setSelected(isTT);
        this.rdoKhoa.setSelected(!isTT);
        this.txtQLNVMatKhau.setText("");
        this.txtQLNVMatKhau2.setText("");
        tblQLNV.setRowSelectionInterval(i, i);
    }

    private NhanVien getForm() {
        //lấy dữ liệu đã nhập từ trên form
        String manv = txtQLNVMaNV.getText();
        String hoTen = txtQLNVHoTen.getText();
        String Email = txtEmail.getText();
        String matKhau = txtQLNVMatKhau.getText();
        boolean vaiTro = rdoQLNVTruongPhong.isSelected();
        boolean trangThai = rdoMoKhoa.isSelected();
        int SLDangNhapSai = rdoMoKhoa.isSelected() ? 0 : 5;
        return new NhanVien(manv, matKhau, hoTen, Email, SLDangNhapSai, trangThai, vaiTro);
    }
    
    private void clearForm() {
        //xóa trắng form
        this.txtQLNVMaNV.setText("");
        this.txtQLNVHoTen.setText("");
        this.rdoQLNVNhanVien.setSelected(true);
        this.txtEmail.setText("");
        this.txtQLNVMatKhau.setText("");
        this.txtQLNVMatKhau2.setText("");
        this.rdoMoKhoa.setSelected(true);
        this.index = -1;
        updateStatus();
    }

    private void updateStatus() {
        //cập nhập trạng thái cho các button điều hướng
        boolean first = (this.index <= 0);
        boolean last = (this.index == tblQLNV.getRowCount() - 1);
        this.btnQLNVFirst.setEnabled(!first);
        this.btnQLNVPre.setEnabled(!first);
        this.btnQLNVLast.setEnabled(!last);
        this.btnQLNVNext.setEnabled(!last);
        if (index == -1) {
            this.tblQLNV.setRowSelectionAllowed(false);
        } else {
            this.tblQLNV.setRowSelectionAllowed(true);
        }
    }


    private boolean mouseClicked() {
        //xử lý sưk kiện click lên table
        this.index = tblQLNV.getSelectedRow();
        updateStatus();
        if (index == -1) {
            return true;
        }
        showForm(index);
        return false;
    }

    private void next() {
        index++;
        updateStatus();
        showForm(index);
    }
    
    private void last() {
        index = tblQLNV.getRowCount() - 1;
        updateStatus();
        showForm(index);
    }

    private void prev() {
        index--;
        updateStatus();
        showForm(index);
    }

    private void first() {
        index = 0;
        updateStatus();
        showForm(index);
    }


    private boolean checkForm() {
        //checkRong
        StringBuilder loi = new StringBuilder();
        NhanVien nv = getForm();
        // check mã nhân viên
        if (nv.getMaNV().trim().isEmpty()) {
            loi.append("Không được để trống mã nhân viên\n");
        } else if (nv.getMaNV().length() > 50) {
            loi.append("Mã nhân viên không được quá 50 ký tự\n");
        }
        //check họ tên nhân viên
        Pattern pHoTen = Pattern.compile("^[\\p{L} .'-]+$");
        if (nv.getHoTen().trim().isEmpty()) {
            loi.append("Không được để trống họ tên nhân viên\n");
        } else if (!pHoTen.matcher(nv.getHoTen()).find()) {
            loi.append("Họ tên không hợp lệ\n");
        } else if (nv.getHoTen().length() > 50) {
            loi.append("Họ tên nhân viên không được quá 50 ký tự\n");
        }
        //check Email
        Pattern pEmail = Pattern.compile("^\\w+@+[a-zA-Z]+(\\.[a-zA-Z]+){1,2}$");
        if (nv.getEmail().trim().isEmpty()) {
            loi.append("Không được để trống Email\n");
        } else if (!pEmail.matcher(nv.getEmail()).find()) {
            loi.append("Email phải đúng định dạng!\nVD: ...@gmail.com hoặc ...@fpt.edu.vn\n");
        }
        //check mật khẩu
        if (nv.getMatKhau().trim().isEmpty()) {
            loi.append("Không được để trống mật khẩu\n");
        }
        if (txtQLNVMatKhau2.getText().trim().isEmpty()) {
            loi.append("Bạn phải nhập mật khẩu xác nhận\n");
        } else if (!txtQLNVMatKhau2.getText().equals(nv.getMatKhau())) {
            loi.append("Mật khẩu xác nhận không khớp\n");
        }
        //hiển thị thông báo lỗi
        if (loi.length() > 0) {
            MessegerHelper.errorMesseger(loi, this);
            return true;
        }
        return false;
    }

    private boolean checkTrung(String manv) {
        //check Trùng
        for (int i = 0; i < tblQLNV.getRowCount(); i++) {
            if (manv.equals(tblQLNV.getValueAt(i, 0))) {
                this.tblQLNV.setRowSelectionInterval(i, i);
                return true;
            }
        }
        return false;
    }

    private boolean themNhanVien() {
        if (checkForm()) {
            return true;
        }
        if (checkTrung(getForm().getMaNV())) {
            MessegerHelper.errorMesseger(new StringBuilder("Mã nhân viên đã tồn tại!"), this);
            return true;
        }
        try {
            this.dao.insert(getForm());
            MessegerHelper.alert("Thêm thành công", this);
            setDataRow(getForm());
            this.index = tblQLNV.getRowCount() - 1;
            this.tblQLNV.setRowSelectionInterval(index, 0);
            showForm(index);
        } catch (Exception ex) {
            MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn!"), this);
            ex.printStackTrace();
            return true;
        }
        return false;
    }

    private boolean suaNhanVien() {
        if (checkForm()) {
            return true;
        }
        if (!checkTrung(getForm().getMaNV())) {
            MessegerHelper.errorMesseger(new StringBuilder("Mã nhân viên này không tồn tại!"), this);
            return true;
        }
        try {
            this.dao.update(getForm());
            MessegerHelper.alert("Sửa thành công", this);
            this.index = tblQLNV.getSelectedRow();
            this.tblQLNV.setValueAt(getForm().getMatKhau(), index, 1);
            this.tblQLNV.setValueAt(getForm().getHoTen(), index, 2);
            this.tblQLNV.setValueAt(rdoQLNVNhanVien.isSelected() ? rdoQLNVNhanVien.getText() : rdoQLNVTruongPhong.getText(), index, 3);
            this.tblQLNV.setValueAt(getForm().getEmail(), index, 4);
            this.tblQLNV.setValueAt(rdoKhoa.isSelected() ? rdoKhoa.getText() : rdoMoKhoa.getText(), index, 5);
        } catch (Exception ex) {
            MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn!"), this);
            ex.printStackTrace();
            return true;
        }
        return false;
    }

    private boolean xoaNhanVien() {
        String manv = getForm().getMaNV();
        manv = nhapMaNV(manv);
        if (MessegerHelper.confirm(this, "Bạn có muốn xóa nhân viên " + manv + " này không?")) {
            try {
                this.dao.delete(manv);
                MessegerHelper.alert("Xóa thành công", this);
                for (int i = 0; i < tblQLNV.getRowCount(); i++) {
                    if (manv.equals(tblQLNV.getValueAt(i, 0))) {
                        this.index = i;
                    }
                }
                this.dtm.removeRow(index);
                showForm(0);
            } catch (Exception ex) {
                MessegerHelper.errorMesseger(new StringBuilder("Lỗi truy vấn!"), this);
                ex.printStackTrace();
                return true;
            }
        }
        return false;
    }

    private String nhapMaNV(String manv) {
        //Bắt phải nhập không nhập thì bấm cancel mới thoát được nhá
        if (manv.isEmpty()) {
            manv = String.valueOf(MessegerHelper.prompt(this, "Bạn phải nhập vào mã nhân viên muốn xóa"));
            if (manv.isEmpty()) {
                manv = nhapMaNV(manv);
            }
        }
        return manv;
    }

    private void EnterAcctions(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnTimKiem.doClick();
        }
    }

    private void timKiemFocus() {
        if (txtTimKiem.getText().trim().isEmpty()) {
            txtTimKiem.setForeground(new Color(255, 0, 0));
            if (LanguageSelected.getSelected == 0) {
                txtTimKiem.setText("Nhập mã nhân viên cần tìm");
            } else {
                txtTimKiem.setText("Enter staff ID");
            }
        }
    }

}
